L2-020. 功夫传人
一门武功能否传承久远并被发扬光大，是要看缘分的。一般来说，师傅传授给徒弟的武功总要打个折扣，于是越往后传，弟子们的功夫就越弱…… 直到某一支的某一代突然出现一个天分特别高的弟子（或者是吃到了灵丹、挖到了特别的秘笈），会将功夫的威力一下子放大N倍 —— 我们称这种弟子为“得道者”。
这里我们来考察某一位祖师爷门下的徒子徒孙家谱：假设家谱中的每个人只有1位师傅（除了祖师爷没有师傅）；每位师傅可以带很多徒弟；并且假设辈分严格有序，即祖师爷这门武功的每个第i代传人只能在第i-1代传人中拜1个师傅。我们假设已知祖师爷的功力值为Z，每向下传承一代，就会减弱r%，除非某一代弟子得道。现给出师门谱系关系，要求你算出所有得道者的功力总值。

输入格式：
输入在第一行给出3个正整数，分别是：N（<=105）——整个师门的总人数（于是每个人从0到N-1编号，祖师爷的编号为0）；Z——祖师爷的功力值（不一定是整数，但起码是正数）；r ——每传一代功夫所打的折扣百分比值（不超过100的正数）。接下来有N行，第i行（i=0, ..., N-1）描述编号为i的人所传的徒弟，格式为：

Ki ID[1] ID[2] ... ID[Ki]

其中Ki是徒弟的个数，后面跟的是各位徒弟的编号，数字间以空格间隔。Ki为零表示这是一位得道者，这时后面跟的一个数字表示其武功被放大的倍数。

输出格式：
在一行中输出所有得道者的功力总值，只保留其整数部分。题目保证输入和正确的输出都不超过1010。

输入样例：
10 18.0 1.00
3 2 3 5
1 9
1 4
1 7
0 7
2 6 1
1 8
0 9
0 4
0 3
输出样例：
404

分析：一开始没弄懂题意，以为是是放大师傅的功力，原来是师傅功力减弱r%后的功力。。用二维数组v存储师门谱系关系，v[i]表示编号为i的师傅所拥有的徒弟，如果徒弟个数等于0，也就是说这是个得道者，那么v[i][0]保存放大的倍数，而且用visit[i] = true标记当前的这个编号的人是得道者～用深度优先搜索，每当遇到visit[index] = true也就是说这是个得道者的时候，就累加放大后的功力，power * v[index][0]，累加到result中～遍历v[index]的所有弟子，并将功力减弱r%【也就是power * (1 - r/100)】，最后输出的是result的整数值(int)result ～～～

#include <cstdio>
#include <vector>
using namespace std;
vector<vector<int> > v;
int n, k;
double z, r, result = 0.0;
bool visit[100010];
void dfs(int index, double power) {
    if (visit[index] == true) {
        result += power * v[index][0];
        return;
    }
    for (int i = 0; i < v[index].size(); i++)
        dfs(v[index][i], power * (1 - r/100));
}
int main() {
    scanf("%d%lf%lf", &n, &z, &r);
    v.resize(n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &k);
        int temp;
        if (k == 0) {
            scanf("%d", &temp);
            v[i].push_back(temp);
            visit[i] = true;
        }
        for (int j = 0; j < k; j++) {
            scanf("%d", &temp);
            v[i].push_back(temp);
        }
    }
    dfs(0, z);
    printf("%d", (int)result);
    return 0;
}